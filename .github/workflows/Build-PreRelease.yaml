name: Build CTRDL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build-PreRelease:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    container:
      image: 'devkitpro/devkitarm'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Host Compiler
        run: DEBIAN_FRONTEND=noninteractive apt update && DEBIAN_FRONTEND=noninteractive apt install -y gcc g++ build-essential

      - name: Configure ResGen
        run: cmake -B ${{github.workspace}}/Build/ResGen -DCMAKE_BUILD_TYPE=Release ResGen

      - name: Build ResGen
        run: cmake --build ${{github.workspace}}/Build/ResGen --config Release

      - name: Install ResGen
        run: cmake --install ${{github.workspace}}/Build/ResGen --prefix ${{github.workspace}}/Build/ResGen/Release

      - name: Configure CTRDL
        run: cmake -B ${{github.workspace}}/Build -G "Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE="$DEVKITPRO/cmake/3DS.cmake" -DCMAKE_BUILD_TYPE=Release -DRESGEN_PATH="${{github.workspace}}/Build/ResGen/Release/bin"

      - name: Build CTRDL
        run: cmake --build ${{github.workspace}}/Build --config Release

      - name: Install CTRDL
        run: cmake --install ${{github.workspace}}/Build --prefix ${{github.workspace}}/Build/Release

      - name: Make ZIP
        run: |
          (cd ${{github.workspace}}/Build/Release && zip -r CTRDL-${{github.sha}}.zip .)
          mv ${{github.workspace}}/Build/Release/CTRDL-${{github.sha}}.zip .

      - name: Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          name: PreRelease-${{github.sha}}
          files: CTRDL-${{github.sha}}.zip
          fail_on_unmatched_files: true
          tag_name: PreRelease-${{github.run_id}}
          prerelease: true
          make_latest: true
          token: ${{secrets.GITHUB_TOKEN}}
          generate_release_notes: true